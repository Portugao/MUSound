<?php
/**
 * MUSound.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUSound
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.7.0 (http://modulestudio.de).
 */

/**
 * Permission check for workflow schema 'standard'.
 * This function allows to calculate complex permission checks.
 * It receives the object the workflow engine is being asked to process and the permission level the action requires.
 *
 * @param array  $obj         The currently treated object
 * @param int    $permLevel   The required workflow permission level
 * @param int    $currentUser Id of current user
 * @param string $actionId    Id of the workflow action to be executed
 *
 * @return bool Whether the current user is allowed to execute the action or not
 */
function MUSound_workflow_standard_permissioncheck($obj, $permLevel, $currentUser, $actionId)
{

    // calculate the permission component
    $objectType = $obj['_objectType'];
    $component = 'MUSound:' . ucfirst($objectType) . ':';

    // calculate the permission instance
    $instance = $obj->createCompositeIdentifier() . '::';

    // now perform the permission check
    $result = SecurityUtil::checkPermission($component, $instance, $permLevel, $currentUser);

    return $result;
}

/**
 * This helper functions cares for including the strings used in the workflow into translation.
 */
function MUSound_workflow_standard_gettextstrings()
{
    return array(
        'title' => no('Standard workflow (single approval)'),
        'description' => no('This is a two staged workflow with stages for untrusted submissions and finally approved publications. It does not allow corrections of non-editors to published pages.'),

        // state titles
        'states' => array(
            no('Initial') => no('Pseudo-state for content which is just created and not persisted yet.'),
            no('Waiting') => no('Content has been submitted and waits for approval.'),
            no('Approved') => no('Content has been approved and is available online.'),
            no('Deleted') => no('Pseudo-state for content which has been deleted from the database.')
        ),

        // action titles and descriptions for each state
        'actions' => array(
            'initial' => array(
                no('Submit') => no('Submit content for acceptance by a moderator.'),
                no('Submit and Approve') => no('Submit content and approve immediately.'),
            )
            ,
            'waiting' => array(
                no('Update') => no('Update content.'),
                no('Approve') => no('Update content and approve for immediate publishing.'),
                no('Delete') => no('Delete content permanently.')
            )
            ,
            'approved' => array(
                no('Update') => no('Update content.'),
                no('Delete') => no('Delete content permanently.')
            )
            ,
            'deleted' => array(
            )
        )
    );
}
